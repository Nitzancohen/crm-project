{"version":3,"sources":["components/Navbar.js","components/Actions/SearchClient.js","components/Actions/UpdateClient.js","components/Actions/AddClient.js","components/Actions/ActionsPage.js","components/Clients/EditClientPopup.js","components/Clients/ClientRow.js","components/Clients/Clients.js","components/Clients/ColumnHeaders.js","components/Clients/FilterClient.js","components/Clients/ShowClientsBlock.js","components/Clients/ClientsPage.js","components/Analytics/Badge.js","components/Analytics/Badges.js","components/Analytics/SalesBy.js","components/Analytics/TopEmployees.js","components/Analytics/Charts.js","components/Analytics/AnalyticsPage.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","resetActive","setState","clients","actions","analytics","changeActive","e","defineProperty","target","id","state","react_default","a","createElement","className","Link","to","onClick","Component","SearchClient","searchClient","clientName","value","console","log","changeClient","props","list","onChange","names","UpdateClient","generateOwnersTags","owners","map","o","generateClientsNamesTags","clientNames","n","name","bindInput","checkClientName","length","includes","alert","transferOwner","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","update","owner","doneMessage","stop","sendEmail","_callee2","_context2","emailType","declareSale","_callee3","_context3","Actions_SearchClient","AddClient","addClient","newName","newClientInfo","firstName","surname","country","type","ActionsPage","componentDidMount","Axios","get","then","data","generateData","toConsumableArray","c","dupes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","push","err","return","updateClient","prop","clientToUpdate","indexOf","clientId","_id","url","method","client","generateClientId","i","Math","round","random","floor","String","fromCharCode","formatDate","d","Date","month","getMonth","day","getDate","year","getFullYear","join","concat","newClient","email","firstContact","sold","Actions_UpdateClient","Actions_AddClient","EditClientPopup","clientInfo","styleClass","show","close","ClientRow","openPopup","showPopup","closePopup","_ref","_x","apply","arguments","split","Clients_EditClientPopup","substring","Clients","Clients_ClientRow","key","ColumnHeaders","FilterClient","changeSearchTerm","searchTerm","toLowerCase","search","changeSearchField","searchField","filterClients","filtered","filter","placeholder","ShowClientsBlock","showClientsBlock","showFrom","ClientsPage","gotData","currentClients","slice","filteredClients","findClientById","find","index","showTable","Clients_FilterClient","Clients_ShowClientsBlock","Clients_ColumnHeaders","components_Clients_Clients","showLoader","Badge","newClientsCount","emailsSent","outstanding","hottestCountry","sent","outstandingClients","badgeData","badge","badgeName","icon","Badges","generateBadges","badges","b","Analytics_Badge","SalesBy","getData","salesBy","s","category","dataType","t0","finish","changeCategory","BarChart","barCategoryGap","width","height","XAxis","dataKey","YAxis","Tooltip","Bar","fill","TopEmployees","topEmployees","layout","Charts","Analytics_TopEmployees","Analytics_SalesBy","AnalyticsPage","Analytics_Badges","Analytics_Charts","App","home","BrowserRouter","src_components_Navbar","Route","exact","path","render","Clients_ClientsPage","Actions_ActionsPage","Analytics_AnalyticsPage","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03b2c24a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css'\r\n\r\nclass Navbar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            clients: 'nav-item',\r\n            actions: 'nav-item',\r\n            analytics: 'nav-item'\r\n        }\r\n    }\r\n\r\n    resetActive = () => this.setState({ clients: 'nav-item', actions: 'nav-item', analytics: 'nav-item' })\r\n\r\n    changeActive = (e) => {\r\n        this.resetActive()\r\n        this.setState({ [e.target.id]: 'nav-item-active' })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navbar\">\r\n                <div className='nav-item'>\r\n                    <Link className='nav-link' to='/' onClick={this.resetActive}><i className=\"fas fa-home\"></i></Link>\r\n                </div>\r\n                <div className={this.state.clients}>\r\n                    <Link className=\"nav-link\" to=\"/clients\" id='clients' onClick={this.changeActive}>Clients</Link>\r\n                </div>\r\n                <div className={this.state.actions}>\r\n                    <Link className=\"nav-link\" to=\"/actions\" id='actions' onClick={this.changeActive}>Actions</Link>\r\n                </div>\r\n                <div className={this.state.analytics}>\r\n                    <Link className=\"nav-link\" to=\"/analytics\" id='analytics' onClick={this.changeActive}>Analytics</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nclass SearchClient extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            clientName: ''\r\n        }\r\n    }\r\n\r\n    searchClient = (e) => this.setState({ clientName: e.target.value }, ()=>{console.log(this.state.clientName)})\r\n\r\n    changeClient = (e) => {\r\n        let clientName = e.target.value\r\n        this.setState({ clientName: clientName }, ()=>{\r\n            this.props.changeClient(clientName)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span>Client: </span>\r\n                <input list=\"names\" className='underline-input' onChange={this.changeClient}></input>\r\n                <datalist id=\"names\">\r\n                    {this.props.names()}\r\n                </datalist>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchClient;","import React, { Component } from 'react';\r\nimport SearchClient from './SearchClient';\r\n\r\nclass UpdateClient extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            clientName: '',\r\n            owner: '',\r\n            emailType: ''\r\n        }\r\n    }\r\n\r\n    generateOwnersTags = () => {\r\n        return this.props.owners.map(o => <option value={o}>{o}</option>)\r\n    }\r\n\r\n    generateClientsNamesTags = () => {\r\n        return this.props.clientNames.map(n => <option value={n}/>)\r\n    }\r\n\r\n    changeClient = (name) => this.setState({ clientName: name })\r\n\r\n    bindInput = (e) => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    checkClientName = () => {\r\n        if (!this.state.clientName.length || !this.props.clientNames.includes(this.state.clientName)) {\r\n            alert('please enter a valid Client name...')    \r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    transferOwner = async () => {\r\n        if (this.checkClientName()) {\r\n            await this.props.update('owner', this.state.owner, this.state.clientName)\r\n            this.doneMessage()\r\n        }\r\n    }\r\n\r\n    sendEmail = async () => {\r\n        if (this.checkClientName()) {\r\n            await this.props.update('emailType', this.state.emailType, this.state.clientName)\r\n            this.doneMessage()\r\n        }\r\n    }\r\n\r\n    declareSale = async () => {\r\n        if (this.checkClientName()) {\r\n            await this.props.update('sold', true, this.state.clientName)\r\n            this.doneMessage()\r\n        }\r\n    }\r\n\r\n    doneMessage = () => {\r\n        return alert('done!')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='page-section'>\r\n                <h4>UPDATE</h4>\r\n                <SearchClient names={this.generateClientsNamesTags} changeClient={this.changeClient}/>\r\n                <p className='indent-update'>\r\n                    <span>Transfer ownership to: </span>\r\n                    <select name='owner' className='select-field underline-input' onChange={this.bindInput}>\r\n                        <option>owner</option>\r\n                        {this.generateOwnersTags()}\r\n                    </select>\r\n                    <span className='client-action' onClick={this.transferOwner}>TRANSFER</span>\r\n                </p>\r\n                <p className='indent-update'>\r\n                    <span>Send email: </span>\r\n                    <select name='emailType' className='select-field underline-input' onChange={this.bindInput}>\r\n                        <option>Email Type</option>\r\n                        <option>A</option>\r\n                        <option>B</option>\r\n                        <option>C</option>\r\n                        <option>D</option>\r\n                    </select>\r\n                    <span className='client-action' onClick={this.sendEmail}>SEND</span>\r\n                </p>\r\n                <p className='indent-update'>Declare sale!<span className='client-action' onClick={this.declareSale}>DECLARE</span></p>\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateClient;","import React, { Component } from 'react';\r\n\r\nclass AddClient extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: '',\r\n            surname: '',\r\n            country: '',\r\n            owner: ''\r\n        }\r\n    }\r\n\r\n    bindInput = (e) => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    addClient = async () => {\r\n        let newName = this.state.firstName + ' ' + this.state.surname\r\n        let newClientInfo = {name: newName, country: this.state.country, owner: this.state.owner}\r\n        await this.props.addClient(newClientInfo)\r\n        alert('done!')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='page-section'>\r\n                <h4>ADD CLIENT</h4>\r\n                <p>First name: <input type='text' className='underline-input new-client-input' value={this.state.firstName} name='firstName' onChange={this.bindInput}></input></p>\r\n                <p>Surname: <input type='text' className='underline-input new-client-input' value={this.state.surname} name='surname' onChange={this.bindInput}></input></p>\r\n                <p>Country: <input type='text' className='underline-input new-client-input' value={this.state.country} name='country' onChange={this.bindInput}></input></p>\r\n                <p>Owner: <input type='text' className='underline-input new-client-input' value={this.state.owner} name='owner' onChange={this.bindInput}></input></p>\r\n                <button type='button' id='add-new-client' onClick={this.addClient}>Add New Client</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddClient;","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport UpdateClient from './UpdateClient';\r\nimport AddClient from './AddClient';\r\nimport './Actions.css'\r\n\r\nclass ActionsPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            clients: [],\r\n            clientNames: [],\r\n            owners: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get('/clients').then(clients => {\r\n            this.setState({ clients: clients.data })\r\n            this.generateData(clients.data)\r\n        })\r\n    }\r\n\r\n    generateData = (data) => {\r\n        let clients = [...data]\r\n        let names = clients.map(c => c.name)\r\n        let dupes = {};\r\n        let owners = [];\r\n        for (let c of clients) {\r\n            if (!dupes[c.owner]) {\r\n                dupes[c.owner] = 1;\r\n                owners.push(c.owner)\r\n            }\r\n        }\r\n        this.setState({ clientNames: names, owners: owners });\r\n    }\r\n\r\n    updateClient = (prop, value, clientName) => {\r\n        let clients = [...this.state.clients]\r\n        let index = this.state.clientNames.indexOf(clientName)\r\n        let clientToUpdate = clients[index]\r\n        let clientId = clientToUpdate._id;\r\n        clientToUpdate[prop] = value;\r\n\r\n        Axios({\r\n            url: '/clients/' + clientId,\r\n            method: 'put',\r\n            data: {\r\n                client: clientToUpdate\r\n            }\r\n        })\r\n    }\r\n\r\n    generateClientId = () => {\r\n        let id = '';\r\n        for (let i = 0; i < 24; i++) {\r\n            let chooseDigit = Math.round(Math.random())\r\n            if (chooseDigit === 0) {\r\n                let n = Math.floor(Math.random() * 10 + 48)\r\n                id += String.fromCharCode(n)\r\n            }\r\n            else {\r\n                let c = Math.floor(Math.random() * 6 + 97)\r\n                id += String.fromCharCode(c)\r\n            }\r\n        }\r\n        return id;\r\n    }\r\n\r\n    formatDate = () => {\r\n        const d = new Date()\r\n        let month = '' + (d.getMonth() + 1)\r\n        let day = '' + d.getDate()\r\n        let year = d.getFullYear()\r\n    \r\n        if (month.length < 2) month = '0' + month;\r\n        if (day.length < 2) day = '0' + day;\r\n\r\n        let date = [year, month, day].join('-')\r\n    \r\n        return date.concat('T21:00:00.000Z')\r\n    }\r\n\r\n    addClient = (newClientInfo) => {\r\n        let newClient = {\r\n            _id: this.generateClientId(),\r\n            name: newClientInfo.name,\r\n            email: '',\r\n            firstContact: this.formatDate(),\r\n            emailType: null,\r\n            sold: false,\r\n            owner: newClientInfo.owner,\r\n            country: newClientInfo.country\r\n        }\r\n        Axios({\r\n            url: '/clients',            \r\n            method: 'post',\r\n            data: {\r\n                client: newClient\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='page'>\r\n                <UpdateClient clientNames={this.state.clientNames} owners={this.state.owners} update={this.updateClient}/>\r\n                <AddClient addClient={this.addClient}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActionsPage;","import React, { Component } from 'react';\r\n\r\nclass EditClientPopup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: this.props.clientInfo.name,\r\n            surname: this.props.clientInfo.surname,\r\n            country: this.props.clientInfo.country\r\n        }\r\n    }\r\n\r\n    bindInput = (e) => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    updateClient = () => this.props.update(this.state)\r\n\r\n    render() {\r\n        let styleClass = this.props.show ? 'modal display-block' : 'modal display-none'\r\n        return (\r\n            <div className={styleClass}>\r\n                <section className=\"modal-main\">\r\n                    <button id='close-popup-btn' onClick={this.props.close}>&times;</button>\r\n                    <p><span>Name: </span><input type='text' value={this.state.name} name='name' onChange={this.bindInput}></input></p>\r\n                    <p><span>Surname: </span><input type='text' value={this.state.surname} name='surname' onChange={this.bindInput}></input></p>\r\n                    <p><span>Country: </span><input type='text' value={this.state.country} name='country' onChange={this.bindInput}></input></p>\r\n                    <button id='update-client-btn' onClick={this.updateClient}>UPDATE</button>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditClientPopup;","import React, { Component } from 'react';\r\nimport EditClientPopup from './EditClientPopup';\r\nimport './Popup.css'\r\n\r\nclass ClientRow extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showPopup: false\r\n        }\r\n    }\r\n\r\n    openPopup = () => this.setState({ showPopup: true })\r\n\r\n    closePopup = () => this.setState({ showPopup: false })\r\n\r\n    updateClient = async (newClientInfo) => {\r\n        await this.props.update(this.props.client._id, newClientInfo)\r\n        this.closePopup();\r\n    }\r\n\r\n    render() {\r\n        const clientInfo = {\r\n            name: this.props.client.name.split(' ')[0],\r\n            surname: this.props.client.name.split(' ')[1],\r\n            country: this.props.client.country\r\n        }\r\n        return (\r\n            <div>\r\n                <EditClientPopup show={this.state.showPopup} close={this.closePopup} clientInfo={clientInfo} update={this.updateClient}/>\r\n                <div className='client-row' onClick={this.openPopup}>\r\n                    <p>{this.props.client.name.split(' ')[0]}</p>\r\n                    <p>{this.props.client.name.split(' ')[1]}</p>\r\n                    <p>{this.props.client.country}</p>\r\n                    <p>{this.props.client.firstContact.substring(0, 10)}</p>\r\n                    {this.props.client.emailType ? <p>{this.props.client.emailType}</p> : <p>-</p>}\r\n                    {this.props.client.sold ? <p><i className=\"fas fa-check\"></i></p> : <p>-</p>}\r\n                    <p>{this.props.client.owner}</p>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClientRow;","import React, { Component } from 'react';\r\nimport ClientRow from './ClientRow.js';\r\n\r\nclass Clients extends Component {\r\n    render() {\r\n        return this.props.clients.map(c => <ClientRow key={c._id} client={c} update={this.props.update}/>);\r\n    }\r\n}\r\n\r\nexport default Clients;","import React, { Component } from 'react';\r\n\r\nclass ColumnHeaders extends Component {\r\n    render() {\r\n        return (\r\n            <div className='column-header'>\r\n                <h4>Name</h4>\r\n                <h4>Surname</h4>\r\n                <h4>Country</h4>\r\n                <h4>First Contact</h4>\r\n                <h4>Email</h4>\r\n                <h4>Sold</h4>\r\n                <h4>Owner</h4>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColumnHeaders;","import React, { Component } from 'react';\r\n\r\nclass FilterClient extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            searchTerm: '',\r\n            searchField: 'name'\r\n        }\r\n    }\r\n\r\n    changeSearchTerm = (e) => this.setState({ searchTerm: e.target.value.toLowerCase() }, () => {this.search()})\r\n\r\n    changeSearchField = (e) => this.setState({ searchField: e.target.value }, () => {this.search()})\r\n\r\n    search = () => {\r\n        if (this.state.searchTerm === '') return this.props.filterClients(null);\r\n        let clients = [...this.props.clients]\r\n        let filtered = clients.filter(c => c[this.state.searchField].toLowerCase().includes(this.state.searchTerm))\r\n        this.props.filterClients(filtered)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='filter-clients'>\r\n                <input type='text' className='underline-input' id='filter-field' value={this.state.searchTerm} onChange={this.changeSearchTerm} placeholder='Search' />\r\n                <select className='underline-input' value={this.state.searchField} onChange={this.changeSearchField}>\r\n                    <option value='name'>Name</option>\r\n                    <option value='owner'>Owner</option>\r\n                    <option value='country'>Country</option>\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterClient;","import React, { Component } from 'react';\r\n\r\nclass ShowClientsBlock extends Component {\r\n    showClientsBlock = (e) => {\r\n        if (this.props.showFrom === 0 && e.target.id === '-') return;\r\n        if (e.target.id === '-') this.props.showClientsBlock(this.props.showFrom-20)\r\n        else this.props.showClientsBlock(this.props.showFrom+20)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='show-clients'>\r\n                <span className='show-clients-arrows' onClick={this.showClientsBlock}><i id='-' className=\"fas fa-arrow-left\"></i></span>\r\n                <span> {this.props.showFrom} - {this.props.showFrom + 20} </span>\r\n                <span className='show-clients-arrows' onClick={this.showClientsBlock}><i id='+' className=\"fas fa-arrow-right\"></i></span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowClientsBlock;","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport Clients from './Clients';\nimport ColumnHeaders from './ColumnHeaders';\nimport FilterClient from './FilterClient';\nimport ShowClientsBlock from './ShowClientsBlock';\nimport './Clients.css'\nimport './Loader.css'\n\nclass ClientsPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            gotData: false,\n            clients: [],\n            filteredClients: null,\n            showFrom: 0\n        }\n    }\n\n    componentDidMount = () => {\n        Axios.get('/clients').then(clients => {\n            this.setState({ clients: clients.data, gotData: true })\n        })\n    }\n\n    showClientsBlock = (showFrom) => this.setState({ showFrom: showFrom })\n\n    currentClients = () => {\n        let clients = [...this.state.clients]\n        return clients.slice(this.state.showFrom, this.state.showFrom + 20)\n    }\n\n    filterClients = (filtered) => this.setState({ filteredClients: filtered })\n\n    findClientById = (id) => {\n        let clients = this.currentClients();\n        return clients.find(c => c._id === id)\n    }\n\n    updateClient = (clientId, newClientInfo) => {\n        let clients = [...this.state.clients]\n        let clientToUpdate = this.findClientById(clientId);\n        let index = clients.indexOf(clientToUpdate);\n        clients[index].name = newClientInfo.name + ' ' + newClientInfo.surname;\n        clients[index].country = newClientInfo.country;\n\n        Axios({\n            url: '/clients/' + clientId,\n            method: 'put',\n            data: {\n                client: clientToUpdate\n            }\n        })\n    }\n\n    showTable = () => {\n        return (\n            <div className='page'>\n                <div className='clients-search'>\n                    <FilterClient clients={this.currentClients()} filterClients={this.filterClients} />\n                    <ShowClientsBlock showFrom={this.state.showFrom} showClientsBlock={this.showClientsBlock} />\n                </div>\n                <div className='clients-table'>\n                    <ColumnHeaders />\n                    {this.state.filteredClients ? <Clients clients={this.state.filteredClients} showFrom={this.state.showFrom} update={this.updateClient} />\n                        : <Clients clients={this.currentClients()} showFrom={this.state.showFrom} update={this.updateClient} />}\n                </div>\n            </div>\n        )\n    }\n\n    showLoader = () => {\n        return (\n            <div className='spinner page'>\n                <div className='rect1'></div>\n                <div className='rect2'></div>\n                <div className='rect3'></div>\n                <div className='rect4'></div>\n                <div className='rect5'></div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.gotData ? this.showTable() : this.showLoader()}\n            </div>\n        );\n    }\n}\n\nexport default ClientsPage;","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\n\r\nclass Badge extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newClientsCount: 0,\r\n            emailsSent: 0,\r\n            outstandingClients: 0,\r\n            hottestCountry: ' '\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let newClientsCount = await Axios.get('/badges/newclients')\r\n        let emailsSent = await Axios.get('/badges/emails')\r\n        let outstanding = await Axios.get('/badges/outstanding')\r\n        let hottestCountry = await Axios.get('/badges/hottestCountry')\r\n        this.setState({\r\n                newClientsCount: newClientsCount.data,\r\n                emailsSent: emailsSent.data,\r\n                outstandingClients: outstanding.data,\r\n                hottestCountry: hottestCountry.data\r\n        })\r\n    }\r\n\r\n    badgeData = () => {\r\n        switch (this.props.badge.id) {\r\n            case 'newClients': return this.state.newClientsCount\r\n            case 'emailsSent': return this.state.emailsSent\r\n            case 'outstandingClients': return this.state.outstandingClients\r\n            case 'hottestCountry': return this.state.hottestCountry\r\n            default: return '';\r\n        }\r\n    }\r\n\r\n    badgeName = () => {\r\n        if (this.props.badge.id !== 'newClients') return this.props.badge.name;\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let date = new Date();\r\n        let month = monthNames[date.getMonth()]\r\n        return `New ${month} Clients`\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='badge'>\r\n                <div className='icon-container' id={this.props.badge.id}>\r\n                    <i className={this.props.badge.icon}></i>\r\n                </div>\r\n                <div className='data-container'>\r\n                    <h4>{this.badgeData()}</h4>\r\n                    <p>{this.badgeName()}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Badge;","import React, { Component } from 'react';\r\nimport Badge from './Badge';\r\n\r\nclass Badges extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            badges: [\r\n                {\r\n                    id: 'newClients', name: 'New Clients',\r\n                    icon: 'fas fa-chart-line bIcon', data: 'b1'\r\n                },\r\n                {id: 'emailsSent', name: 'Emails Sent', icon: 'fas fa-envelope bIcon', data: 'b2'},\r\n                {id: 'outstandingClients', name: 'Outstanding Clients', icon: 'fas fa-user-circle bIcon', data: 'b3'},\r\n                {id: 'hottestCountry', name: 'Hottest Country', icon: 'fas fa-globe-americas bIcon', data: 'b4'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    generateBadges = () => {\r\n        return this.state.badges.map(b => {\r\n            return <Badge key={b.id} badge={b}/>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='badges'>\r\n                {this.generateBadges()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Badges;","import React, { Component } from 'react';\r\nimport { BarChart, XAxis, YAxis, Tooltip, Bar } from 'recharts';\r\nimport Axios from 'axios';\r\n\r\nclass SalesBy extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [],\r\n            category: 'country'\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => this.getData()\r\n\r\n    getData = async () => {\r\n        let data = await Axios.get('/charts/salesby/'+this.state.category)\r\n        let salesBy = [...data.data]\r\n        for (let s of salesBy) {\r\n            s.dataType = s.dataType.split(' ')[0]\r\n        }\r\n        this.setState({ data: salesBy })\r\n    }\r\n\r\n    changeCategory = (e) => this.setState({ category: e.target.value }, () => {\r\n        this.getData()\r\n    })\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>\r\n                    Sales By <select value={this.state.category} onChange={this.changeCategory}>\r\n                        <option>country</option>\r\n                        <option>email</option>\r\n                        <option>owner</option>\r\n                    </select>\r\n                </h4>\r\n                <br />\r\n                <BarChart barCategoryGap=\"20%\" width={600} height={150} data={this.state.data}>\r\n                    <XAxis dataKey=\"dataType\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Bar dataKey=\"count\" fill=\"#955196\" />\r\n                </BarChart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SalesBy;","import React, { Component } from 'react';\r\nimport { BarChart, XAxis, YAxis, Tooltip, Bar } from 'recharts';\r\nimport Axios from 'axios';\r\n\r\nclass TopEmployees extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let data = await Axios.get('/charts/employees')\r\n        let topEmployees = [...data.data]\r\n        for (let e of topEmployees) {\r\n            e.owner = e.owner.split(' ')[0]\r\n        }\r\n        this.setState({ data: topEmployees })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>Top Employees</h4><br />\r\n                <BarChart barCategoryGap=\"20%\" layout=\"vertical\" width={600} height={150} data={this.state.data}>\r\n                    <XAxis type='number' />\r\n                    <YAxis dataKey='owner' type='category' />\r\n                    <Tooltip />\r\n                    <Bar dataKey='count' fill=\"#003f5c\" />\r\n                </BarChart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopEmployees;","import React, { Component } from 'react';\r\nimport SalesBy from './SalesBy';\r\nimport TopEmployees from './TopEmployees';\r\n\r\nclass Charts extends Component {\r\n    render() {\r\n        return (\r\n            <div className='charts-container'>\r\n                <TopEmployees />\r\n                <SalesBy />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Charts;","import React, { Component } from 'react';\r\nimport './Analytics.css'\r\nimport Badges from './Badges';\r\nimport Charts from './Charts';\r\n\r\nclass AnalyticsPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='page'>\r\n                <Badges />\r\n                <Charts />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AnalyticsPage;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport ActionsPage from './components/Actions/ActionsPage';\nimport ClientsPage from './components/Clients/ClientsPage';\nimport AnalyticsPage from './components/Analytics/AnalyticsPage';\n\nclass App extends Component {\n  home = () => {\n    return (\n      <div className='homepage'>\n        <h4>WELCOME TO CRM</h4>\n        <p id='info'>Start managing your customers today.</p>\n        <p id='lorem'>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar />\n            <Route exact path=\"/\" render={this.home} />\n            <Route exact path=\"/clients\" render={() => <ClientsPage />} />\n            <Route exact path=\"/actions\" render={() => <ActionsPage />} />\n            <Route exact path=\"/analytics\" render={() => <AnalyticsPage />} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}